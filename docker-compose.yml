services:
  db:
    image: postgres:15.5
    container_name: ${DB_CONTAINER_NAME:-taskflow-db}
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_DB: ${DB_NAME:-taskflow}
    ports:
      - "${DB_PORT:-5433}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - local_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ${API_CONTAINER_NAME:-taskflow-api}
    ports:
      - "${PORT:-8080}:8080"
    environment:
      - SERVER_PORT=${PORT:-8080}
      - SERVER_ENV=${ENV:-development}
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - DB_NAME=${DB_NAME:-taskflow}
      - DB_SSL_MODE=disable
      - JWT_SECRET=${JWT_SECRET:-your_jwt_secret_here}
      - JWT_EXPIRY=${JWT_EXPIRY:-24h}
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - local_net

  migrations:
    build:
      context: .
      dockerfile: ./Dockerfile.migrations
    container_name: ${MIGRATION_CONTAINER_NAME:-taskflow-migrations}
    environment:
      APP_DB_USERNAME: ${DB_USER:-postgres}
      APP_DB_PASSWORD: ${DB_PASSWORD:-password}
      APP_DB_HOST: ${DOCKER_DB_HOST:-db}
      APP_DB_PORT: "5432"
      APP_DB_DATABASE: ${DB_NAME:-taskflow}
    env_file:
      - .env 
    depends_on:
      db:
        condition: service_healthy
    networks:
      - local_net

volumes:
  postgres_data:

networks:
  local_net:
    name: ${NETWORK_NAME:-local_net}
